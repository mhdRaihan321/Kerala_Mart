<section>
  <div class="container mt-5">
    <a href="/orders" class="btn btn-warning mb-4 text-dark" style="font-weight: bold;">
      <i class="fa-regular fa-circle-left fa-xl" style="color: #000000;"></i> Back
    </a>
    <h1 class="text-center mb-4"><u>Order Details</u></h1>
    <div class="row justify-content-center text-center">
      {{#if products}}
      <script>
        var productCount = {{ products.length }};
      </script>
      {{#each products}}
      <div class="col-md-4 mb-4">
        <div class="card h-100 shadow-sm order-card">
          <div class="image">
            <img src="{{this.productImageUrl}}" class="card-img-top" alt="{{this.productName}}">
          </div>
          <div class="card-body d-flex flex-column">
            <h5 class="card-title">{{this.productMainName}}</h5>
            <p class="card-text price"><strong>Price per Item: </strong>Rs. {{this.productPrice}}₹</p>
            <p class="card-text"><strong>Quantity: </strong>{{this.quantity}}</p>
            <p class="card-text"><strong>Brand Info: </strong>{{this.productBrandInfo}}</p>
            <p class="card-text"><strong>Dname: </strong>{{this.productDname}}</p>
            <button class="btn btn-danger mt-auto cancel-btn" style="display: none;"
              onclick="cancelItem('{{../orderId}}', '{{this.item}}')">Cancel Item</button>
          </div>
        </div>
      </div>
      {{/each}}
      {{else}}
      <h4 class="mt-6" style="background-color: black; color: red; margin-top: 39px;">You Cancelled All Items So The
        Order Is Cancelled! <br>
        This Order Will not Be Displayed In The Orders
      </h4>
      {{/if}}

      <div class="otherDetails text-left mt-4">
        <div class="delivery-details">
          <h5><strong><u>Delivery Details</u></strong></h5>
          <h6><strong>Name: </strong>{{deliveryAddress.name}}</h6>
          <h6><strong>Mobile: </strong> {{deliveryAddress.mobile}}</h6>
          <h6><strong>Delivery Address: </strong> {{deliveryAddress.address}}</h6>
          <h6><strong>Delivery Pincode: </strong> {{deliveryAddress.pincode}}</h6>
          <h6><strong>Total Amount: </strong>₹{{ordertotal}}</h6>
        </div>
        <div class="PaidorNot">
          {{#if PaidOrNot }}
          <Button class="btn btn-success">Already Paid</Button>
          <p class="text-success"><strong>Already Paid Door Step Delivery</strong></p>
          {{else}}
          <form action="" id="checkout-paynow">
            <input type="hidden" name="orderId" value="{{orderId}}">
            <input type="hidden" name="ordertotal" value="{{ordertotal}}">
            <input type="hidden" name="paymethod" value="ONLINE">
            <button class="btn btn-warning" type="submit">Pay Now</button>
          </form>
          <p class="" style="color: rgb(0, 52, 240);"><strong>Pay Now And Get Door Step Delivery</strong></p>
          {{/if}}
        </div>
        <h6 class="mt-2"><strong>Track Order : </strong>{{orderStatus}}</h6>
        <h6><strong>Expected Delivery Date: </strong>{{calculateDeliveryDate createdAt}}</h6>
        <div class="button-group">
          <a href="/orders" class="btn btn-primary mt-3">Back to Orders</a>
          <button class="btn btn-danger mt-3 cancel-order-btn" onclick="cancelOrder('{{orderId}}')">Cancel
            Order</button>
        </div>
      </div>
    </div>
    <div class="mt-5"></div>
  </div>
</section>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  $(document).ready(() => {
    // Prevent form submission on Enter key press
    $('#checkout-paynow').on('keydown', (e) => {
      if (e.keyCode === 13) { // 13 is the Enter key code
        e.preventDefault();
        alert('Press the "Check Out" button to proceed.');
      }
    });

    // Handle form submission using AJAX
    $("#checkout-paynow").submit((e) => {
      e.preventDefault();
      const confirmationMessage = `Are you sure you want to pay now?`;

      if (confirm(confirmationMessage)) {
        $.ajax({
          url: `/payafterplaced`,
          method: 'post',
          data: $('#checkout-paynow').serialize(),
          success: (response) => {
          console.log('Amount: ', response)
            if (response.cancel) {
              location.href = '/orders';
            } else {
              console.log('Amount_Due', response.amount_due)
              console.log('Amount', response.amount)
              // Assuming you have the user details in the response --}}
              const userD = {
                name: "{{user.name}}",
                email: "{{user.email}}",
                mobile: "{{user.contact}}",
              };
              
              razorPayPayment(response, userD);

              console.log("User D:", userD)
              console.log("Order ", response)
            }
          },
          error: (err) => {
            console.error('Error initiating payment:', err);
            alert('Error initiating payment. Please try again.');
          }
        });
      } else {
        // User cancelled the order
        return;
      }
    });

    function razorPayPayment(order, userD) {
      var options = {
        "key": "rzp_test_HSGXHXFayRD319", // Enter the Key ID generated from the Dashboard
        "amount": order.amount * 100, // Amount is in currency subunits. Default currency is INR.
        "currency": "INR",
        "name": "kerala Mart",
        "description": "Order Payment",
        "image": "https://stockton.pythonanywhere.com/static/images/Kerala_Mart.jpg",
        "order_id": order.id, // Pass the `id` obtained in the response of Step 1
        "handler": function (response) {
          verifyPayment(response, order);
        },
        "prefill": {
          "name": userD.name,
          "email": userD.email,
          "contact": userD.contact
        },
        "notes": {
          "address": ""
        },
        "theme": {
          "color": "#007bff"
        }
      };
      console.log(options)
      var rzp1 = new Razorpay(options);
      rzp1.open();
    }

    function verifyPayment(payment, order) {
      $.ajax({
        url: '/verify-payment',
        method: 'post',
        data: {
          payment,
          order
        },
        success: (response) => {
          if (response.status) {
            location.reload()
          }
          // Redirect to order success page or show success message
        },
        error: (err) => {
          console.error('Error verifying payment:', err);
          alert('Payment verification failed. Please contact support. Try again.');
        }
      });
    }

    window.onload = function () {
      if (productCount > 1) {
        document.querySelectorAll('.cancel-btn').forEach(function (button) {
          button.style.display = "block";
        });
      }
    };
  });

  function cancelItem(orderId, productId) {
    if (confirm('Are you sure you want to cancel this item?')) {
      $.ajax({
        url: `/orders/cancel-item/${orderId}/${productId}`,
        method: 'POST',
        success: function (response) {
          if (response.success) {
            alert('Item cancelled successfully!');
            location.reload(); // Reload the page to reflect the changes
          } else {
            alert('Failed to cancel item: ' + response.message);
            location.reload(); // Reload the page to reflect the changes
          }
        },
        error: function (xhr, status, error) {
          alert('Item cancelled successfully!');
          location.reload(); // Reload the page to reflect the changes
        }
      });
    }
  }

  function cancelOrder(orderId) {
    if (confirm('Are you sure you want to cancel this order?')) {
      $.ajax({
        url: `/orders/cancel-order/${orderId}`,
        method: 'POST',
        success: function (response) {
          if (response.success) {
            alert('Order cancelled successfully');
            location.href = '/orders';
          } else {
            alert('Error cancelling order: ' + response.message);
          }
        },
        error: function (xhr, status, error) {
          alert('Error: ' + error);
        }
      });
    }
  }
</script>

<style>
  /* Styles for Order Details Section */
  .order-card {
    border: 1px solid #ddd;
    border-radius: 5px;
    transition: box-shadow 0.3s ease;
    overflow: hidden;
    background: #fff;
  }

  .order-card:hover {
    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.15);
  }

  .order-card .card-img-top {
    height: 200px;
    object-fit: contain;
    border-bottom: 1px solid #ddd;
  }

  .order-card .card-body {
    padding: 20px;
    display: flex;
    flex-direction: column;
  }

  .order-card .card-title {
    font-size: 1.3rem;
    font-weight: bold;
    margin-bottom: 15px;
  }

  .order-card .price {
    margin-bottom: 10px;
    color: #4caf50;
    font-weight: bold;
  }

  .order-card .cancel-btn {
    width: 100%;
  }

  .delivery-details {
    border-top: 1px solid #ddd;
    padding: 20px;
    background: #f9f9f9;
    border-radius: 5px;
  }

  .delivery-details h6 {
    margin-bottom: 8px;
  }

  .otherDetails {
    margin-top: 30px;
  }

  .button-group {
    margin-top: 20px;
  }

  .button-group .btn {
    margin-right: 10px;
  }

  .btn-danger {
    background-color: #dc3545;
    border-color: #dc3545;
  }

  .btn-danger:hover {
    background-color: #c82333;
    border-color: #bd2130;
  }
</style>